{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.11.0.0",
        "fileVersion": "4.11.0-3.24365.8 (9e9c7c1d)",
        "semanticVersion": "4.11.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'exception' in 'string ErrorController.GetErrorMessage(Exception exception)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 51,
                  "endLine": 45,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/AppointmentController.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Program.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 5,
                  "endLine": 43,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "\"password\" detected here, make sure this is not a hard-coded credential.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/appsettings.json",
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 115
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'NotFoundException' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'MedicalRecordNotFoundException' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'AppointmentNotFound' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'IdMismatchException' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3376",
          "level": "warning",
          "message": "Make this class name end with 'Exception'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'result'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/AppointmentController.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endLine": 68,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S5122",
          "level": "warning",
          "message": "Make sure this permissive CORS policy is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Program.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await RunAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Program.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetErrorMessage' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 24,
                  "endLine": 48,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6931",
          "level": "warning",
          "message": "Change the paths of the actions of this controller to be relative and add a controller route with the common prefix.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 18,
                  "endLine": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 10,
                  "endLine": 17,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 10,
                  "endLine": 39,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetErrorMessage' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/FII-2024-2025/.NET/PROIECT/Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System/Controllers/ErrorController.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 24,
                  "endLine": 48,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1050": {
          "id": "CA1050",
          "shortDescription": "Declare types in namespaces",
          "fullDescription": "Types are declared in namespaces to prevent name collisions and as a way to organize related types in an object hierarchy.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2068": {
          "id": "S2068",
          "shortDescription": "Hard-coded credentials are security-sensitive",
          "fullDescription": "Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true for applications that are distributed or that are open-source.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2068",
          "properties": {
            "category": "Blocker Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3376": {
          "id": "S3376",
          "shortDescription": "Attribute, EventArgs, and Exception type names should end with the type being extended",
          "fullDescription": "Adherence to the standard naming conventions makes your code not only more readable, but more usable. For instance, class FirstAttribute : Attribute can be used simply with First, but you must use the full name for class AttributeOne : Attribute.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3376",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S5122": {
          "id": "S5122",
          "shortDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive",
          "fullDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-5122",
          "properties": {
            "category": "Minor Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6931": {
          "id": "S6931",
          "shortDescription": "ASP.NET controller actions should not have a route template starting with \"/\"",
          "fullDescription": "Route templates for ASP.NET controller actions, defined via a RouteAttribute or any derivation of HttpMethodAttribute, should not start with \"/\".",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6931",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6966": {
          "id": "S6966",
          "shortDescription": "Awaitable method should be used",
          "fullDescription": "In an async method, any blocking operations should be avoided.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6966",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}